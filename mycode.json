[{"_id":"Default-1588045113736","name":"My Code","type":"script","expressions":[{"_id":"Controller-1592193888763","code":"function findControllerName(name) {\n\tvar layerName = \"\";\n\tvar controller = {\n\t\tpoint3D: \"ADBE Point3D Control\",\n\t\tangle: \"ADBE Angle Control\",\n\t\tcheckbox: \"ADBE Checkbox Control\",\n\t\tcolor: \"ADBE Color Control\",\n\t\tlayer: \"ADBE Layer Control\",\n\t\tpoint: \"ADBE Point Control\",\n\t\tslider: \"ADBE Slider Control\"\n\t};\n\n\tfor (var control in controller) {\n\t\tvar sanitize = control.replace(/ADBE/g).replace(/Control/g).trim();\n\t\tvar nameReg = new RegExp(name, \"g\");\n\t\tif (sanitize.match(nameReg)) {\n\t\t\tlayerName = controller[control];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn layerName;\n}","name":"Controller Helper","documentation":"findControllerName(**Controller Name : string**)","tags":["Controller","Helper"],"is_snippet":false,"include_id":"controller","is_include":true,"last_update":1592207653179},{"_id":"Divide-Compositions-1590999177068","code":"var comp = app.project.selection;\nvar MUTEAUDIO = _ bool: Mute Audio ? _;\nvar compSec = _ number *: Number of seconds on each Divide Compositions _;\nvar fastForward = _ bool: Enable fast forward ? _;\nvar fastForwardDifference = _ number: Time in seconds to fast forward _;\nvar rotateValue = _ number: Rotate Compositions ? (HINTS: 90, 180, 270) _;\nvar timeRemappingPropertyName = \"ADBE Time Remapping\";\n\nvar ROTATION = {\n\tVERTICAL: 90,\n\tHORIZONTAL: 180,\n\tINVERTVERTICAL: 270\n}\n\nif (comp.length === 0) {\n\talert(\"You didn't select any compositions in Project Panel. Please select atleast one\");\n} else {\n\tapp.beginUndoGroup(\"Divide Compositions\");\n\tmain();\n\tapp.endUndoGroup();\n}\n\nfunction rotation(comp, layer, rotation) {\n\tvar width = comp.width;\n\tvar height = comp.height;\n\tvar posX = layer.Transform.property(\"Position\").value[0];\n\tvar posY = layer.Transform.property(\"Position\").value[1];\n\tif (ROTATION.VERTICAL == rotation) {\n\t\tcomp.width = height;\n\t\tcomp.height = width;\n\t\tlayer.Transform.property(\"Rotation\").setValue(rotation);\n\t\tlayer.Transform.property(\"Position\").setValue([posY, posX]);\n\t\treturn;\n\t} else if (ROTATION.INVERTVERTICAL == rotation) {\n\t\tcomp.width = height;\n\t\tcomp.height = width;\n\t\tlayer.Transform.property(\"Rotation\").setValue(rotation);\n\t\tlayer.Transform.property(\"Position\").setValue([posY, posX]);\n\t\treturn;\n\t} else if (ROTATION.HORIZONTAL == rotation) {\n\t\tlayer.Transform.property(\"Rotation\").setValue(rotation);\n\t\treturn;\n\t} else {\n\t\twrite(\"ERROR ROTATE: \" + comp.name);\n\t}\n}\n\nfunction rotateName(compName, rotation) {\n\tif (ROTATION.VERTICAL == rotation) {\n\t\treturn compName + \" - ROTATE \" + rotation + \"°\";\n\t} else if (ROTATION.INVERTVERTICAL == rotation) {\n\t\treturn compName + \" - ROTATE \" + rotation + \"°\";\n\t} else if (ROTATION.HORIZONTAL == rotation) {\n\t\treturn compName + \" - ROTATE \" + rotation + \"°\";\n\t} else {\n\t\treturn compName;\n\t}\n}\n\nfunction main() {\n\tfor (var i = 0; i < comp.length; i++) {\n\t\tvar compName = comp[i].name.replace(/\\.[^\\/\\.]+$/, \"\");\n\t\tif (rotateValue) {\n\t\t\tcompName = rotateName(compName, rotateValue);\n\t\t}\n\t\tvar folder = app.project.items.addFolder(compName);\n\t\tvar remaining = calculateDivide(fastForward, compSec, fastForwardDifference);\n\t\tvar compTimeDivide = comp[i].duration / remaining;\n\t\tvar startTime = 0;\n\t\tvar lastTime = comp[i].duration;\n\t\tfor (var numComp = 0; numComp < compTimeDivide; numComp++) {\n\t\t\t// If it reaches limit, reset fastForwardStart & fastForwardEnd value\n\t\t\tif (lastTime < 0) {\n\t\t\t\tfastForwardStart = undefined;\n\t\t\t\tfastForwardEnd = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Adding new comp in a folder\n\t\t\tvar newComp = folder.items.addComp(compName + \"-\" + numComp, comp[i].width, comp[i].height, comp[i].pixelAspect, compSec, comp[i].frameRate);\n\t\t\tnewComp.layers.add(comp[i]);\n\t\t\tvar layer = newComp.layer(comp[i].name);\n\t\t\tlayer.startTime -= startTime;\n\n\t\t\tif (rotateValue) {\n\t\t\t\trotation(newComp, layer, rotateValue);\n\t\t\t}\n\n\t\t\t// If user wants to mute audio\n\t\t\tif (MUTEAUDIO) {\n\t\t\t\tlayer.audioEnabled = false;\n\t\t\t}\n\n\t\t\t// If fast forward enabled\n\t\t\tif (fastForward && layer.canSetTimeRemapEnabled) {\n\t\t\t\tvar fastForwardStart = fastForwardEnd ? fastForwardEnd : startTime;\n\n\t\t\t\t// Calculate at the end of fastForwardEnd value\n\t\t\t\tif (numComp > 1 && fastForwardEnd) {\n\t\t\t\t\tfastForwardEnd = fastForwardEnd + fastForwardDifference;\n\t\t\t\t} else {\n\t\t\t\t\tvar fastForwardEnd = startTime + compSec + fastForwardDifference;\n\t\t\t\t}\n\n\t\t\t\t// If it reaches the maximum of compositions duration\n\t\t\t\tif (fastForwardEnd > comp[i].duration) {\n\t\t\t\t\tfastForwardEnd = comp[i].duration;\n\t\t\t\t}\n\n\n\t\t\t\t// Time remapping starts\n\t\t\t\tlayer.timeRemapEnabled = true;\n\t\t\t\tvar newFirstKeyIndex = layer.property(timeRemappingPropertyName).addKey(newComp.displayStartTime);\n\t\t\t\tvar newLastKeyIndex = layer.property(timeRemappingPropertyName).addKey(newComp.displayStartTime + newComp.duration);\n\t\t\t\tlayer.property(timeRemappingPropertyName).setValueAtKey(newFirstKeyIndex, fastForwardStart);\n\t\t\t\tlayer.property(timeRemappingPropertyName).setValueAtKey(newLastKeyIndex, fastForwardEnd);\n\n\t\t\t\t// Will decrease it lastTime to exit the loop\n\t\t\t\tlastTime -= fastForwardDifference;\n\t\t\t}\n\n\t\t\t// Will increase startTime to continue doing adding newComp at the number of seconds input\n\t\t\tstartTime += compSec;\n\t\t}\n\t}\n}\n\n\n// Function to calculate remaining of time based on number of compositions set.\nfunction calculateDivide(enable, compSec, difference) {\n\tif (enable) {\n\t\tvar remaining = compSec - difference;\n\t\tif (remaining > 0) {\n\t\t\treturn remaining\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t} else {\n\t\treturn compSec;\n\t}\n}","name":"Divide Compositions","documentation":"Ever wonder to divide your lengthy compositions into a specific number of seconds? Try to figuring out how to post on Instagram Story or whatsoever? Try this script!\n\nP/s : You can also fast forward video in number of seconds. Try it out!","tags":["Compositions","Duration","Divide"],"last_update":1592192799067},{"_id":"Motion-Trail-1588228261142","code":"app.beginUndoGroup(\"Undo Motion Trail\");\n\nvar targetLayer = _ layer: Target Layer _;\nvar renameLayer = _ string: Rename Layer _;\nvar labelColor = _ number: Label Color(Option: 1 - 16) _;\nvar numOfFramesDelay = _ number: Number of Frames Delay _;\nvar opacityFactor = _ number: Opacity Factor(Try 0.75) _;\nvar numOfRepeatLayer = _ number: Number of Repeat Layer(Optional) _;\n\nclearOutput();\n\nif (targetLayer) {\n\tvar layer = app.project.activeItem.layer(targetLayer.name);\n\tvar nullLayer = app.project.activeItem.layers.addNull();\n\tnullLayer.name = renameLayer.length > 0 ? renameLayer + \" Controller\" : layer.name + \" Controller\";\n\tlayer.label = labelColor;\n\tnullLayer.label = labelColor;\n\n\tif (renameLayer.length > 0) {\n\t\tlayer.name = renameLayer;\n\t}\n\n\t// Add slider control\n\tvar sliderFrame = nullLayer.Effects.addProperty(\"ADBE Slider Control\");\n\tsliderFrame.name = \"Number of Frames Delay\";\n\tsliderFrame.property(\"Slider\").setValue(numOfFramesDelay);\n\t//Apply to position\n\tvar posExpression = \"var delay = thisComp.layer(\\\"\" + nullLayer.name + \"\\\").effect(\\\"\" + sliderFrame.name + \"\\\")(1); //number of frames to delay \\nvar d = delay*thisComp.frameDuration*(index - 1); \\nthisComp.layer(1).position.valueAtTime(time - d);\";\n\n\tvar sliderOpac = nullLayer.Effects.addProperty(\"ADBE Slider Control\");\n\tsliderOpac.name = \"Opacity Factor\";\n\tsliderOpac.property(\"Slider\").setValue(opacityFactor);\n\t//Apply to Opacity\n\tvar opacExpression = \"var opacityFactor = thisComp.layer(\\\"\" + nullLayer.name + \"\\\").effect(\\\"\" + sliderOpac.name + \"\\\")(1); \\nMath.pow(opacityFactor,index - 1)*100;\";\n\n\ttry {\n\t\t// Add expression\n\t\tlayer.property(\"Transform\").property(\"Position\").expression = posExpression;\n\t\tlayer.property(\"Transform\").property(\"Opacity\").expression = opacExpression;\n\t} catch (e) {\n\t\talert(e);\n\t}\n\n\t// Parent all layer to null layer so that it can animate position property and all\n\t// \tapp.project.activeItem.layer(layer.name).parent = nullLayer;\n\n\tif (numOfRepeatLayer > 0) {\n\t\tfor (var i = 0; i < numOfRepeatLayer; i++) {\n\t\t\tvar duplicateLayer = layer.duplicate();\n\t\t}\n\t}\n}\n\nwriteLn(\"Script successful added to layer name:\\n'\" + layer.name + \"'.\")\napp.endUndoGroup();","name":"Motion Trail","documentation":"You can apply this to any layer! It will do motion trail for you when you had set keyframe on Position property.","tags":["Motion Trail","Trail"],"last_update":1591380434089},{"_id":"RAW-Beautify-1591342857540","code":"require(\"stringReplace\");\nrequire(\"controller\");\nvar selections = app.project.selection;\nvar customName = _ string: Custom Compositions Name Prefix _;\nvar postfix = _ bool: Enable custom name as postfix ? _;\nvar nullController = _ bool: Need Controller ? (NULL layer) _;\nvar DARK_MaskRadius = _ number *: Dark Mask Radius(Minimum = 1) _;\nvar DARK_MaskAmount = _ number *: Dark Mask Amount(Minimum = 50) _;\nvar LIGHT_MaskRadius = _ number *: Light Mask Radius(Minimum = 0.5) _;\nvar LIGHT_MaskAmount = _ number *: Light Mask Amount(Minimum = 50) _;\nvar BRIGHTNESS_CONTROL = _ bool: Need Brightness Control ? _;\nvar BRIGHTNESS_VALUE = _ number: Brightness Value _;\nvar CONTRAST_VALUE = _ number: Contrast Value _;\nvar SOFT_LIGHT = BlendingMode.SOFT_LIGHT;\nvar LIGHTEN = BlendingMode.LIGHTEN;\nvar unsharpMask = \"ADBE Unsharp Mask2\";\nvar hue = \"ADBE HUE SATURATION\";\nvar brightness = \"ADBE Brightness & Contrast 2\";\n\nif (selections.length === 0) {\n\talert(\"You did not select any compositions in Project Panel\");\n} else {\n\tapp.beginUndoGroup(\"RAW Color Compositions\");\n\tmain();\n\tapp.endUndoGroup();\n}\n\n\nfunction addController(controlLayer, targerLayer, effect, controller) {\n\tvar AE_Controller = findControllerName(controller.controllerType);\n\t// Get Value from target layer\n\tif (effect.effectName){\n\t  var getValue = targerLayer.Effects.property(effect.effectType)(effect.effectName).value;\n\t} else {\n\t  var getValue = targerLayer.Effects.property(effect.effectType)(1).value;\n\t}\n\t\n\tvar slider_control = controlLayer.Effects.addProperty(AE_Controller);\n\tif (controller.controllerName && controller.controllerName.length > 0) {\n\t\tslider_control.name = controller.controllerName;\n\t}\n\t\n\t// Apply value on slider controller\n\tslider_control.property(1).setValue(getValue);\n\t\n\t// Set expression on targetLayer\n\tif (effect.effectName) {\n\t\ttargerLayer.Effects.property(effect.effectType)(effect.effectName).expression = \"thisComp.layer(\\\"\" + controlLayer.name + \"\\\").effect(\\\"\" + slider_control.name + \"\\\")(1)\";\n\t} else {\n\t\ttargerLayer.Effects.property(effect.effectType)(1).expression = \"thisComp.layer(\\\"\" + controlLayer.name + \"\\\").effect(\\\"\" + slider_control.name + \"\\\")(1)\";\n\t}\n}\n\nfunction main() {\n\tfor (var numComp = 0; numComp < selections.length; numComp++) {\n\t\tvar naming = removeExtensionName(selections[numComp].name);\n\t\tif (customName && customName.length > 0) {\n\t\t\tnaming = !postfix ? customName + \" - \" + removeExtensionName(selections[numComp].name) : removeExtensionName(selections[numComp].name) + \" - \" + customName;\n\t\t}\n\t\tvar newComp = app.project.items.addComp(naming, selections[numComp].width, selections[numComp].height, selections[numComp].pixelAspect, selections[numComp].duration, selections[numComp].frameRate);\n\t\tnewComp.layers.add(selections[numComp]);\n\t\tvar layer = newComp.layer(selections[numComp].name);\n\t\tvar secondLayer = layer.duplicate();\n\t\tsecondLayer.blendingMode = SOFT_LIGHT;\n\n\t\tif (nullController) {\n\t\t\tvar NULL_LAYER = addNullLayer(newComp, \"CONTROLLER\");\n\t\t}\n\n\t\ttry {\n\t\t\tvar DARK = addAdjustmentLayer(newComp, selections[numComp], \"DARK\");\n\t\t\tvar DARK_MASK1 = DARK.Effects.addProperty(unsharpMask);\n\t\t\tDARK_MASK1.property(\"radius\").setValue(DARK_MaskRadius);\n\t\t\tDARK_MASK1.property(\"amount\").setValue(DARK_MaskAmount);\n\n\t\t\tvar LIGHT = addAdjustmentLayer(newComp, selections[numComp], \"LIGHT\");\n\t\t\tLIGHT.blendingMode = LIGHTEN;\n\n\t\t\t// Start with mask 2 first because my format is always like that\n\t\t\tvar LIGHT_MASK2 = LIGHT.Effects.addProperty(unsharpMask);\n\t\t\tLIGHT_MASK2.property(\"radius\").setValue(LIGHT_MaskRadius * 2);\n\t\t\tLIGHT_MASK2.property(\"amount\").setValue(LIGHT_MaskAmount * 2);\n\n\t\t\tvar LIGHT_MASK1 = LIGHT.Effects.addProperty(unsharpMask);\n\t\t\tLIGHT_MASK1.property(\"radius\").setValue(LIGHT_MaskRadius);\n\t\t\tLIGHT_MASK1.property(\"amount\").setValue(LIGHT_MaskAmount);\n\n\t\t\tvar HUE = addAdjustmentLayer(newComp, selections[numComp], \"HUE\");\n\t\t\tvar HUE_EFFECT = HUE.Effects.addProperty(hue);\n\n\t\t\tif (NULL_LAYER) {\n\t\t\t\t// 1\n\t\t\t\taddController(NULL_LAYER, DARK, {\n\t\t\t\t\teffectType: unsharpMask\n\t\t\t\t}, {\n\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\tcontrollerName: \"Unsharp Mask (Dark)\"\n\t\t\t\t});\n\t\t\t\taddController(NULL_LAYER, DARK, {\n\t\t\t\t  effectType:\"Unsharp Mask\",\n\t\t\t\t  effectName:\"Radius\"\n\t\t\t\t}, {\n\t\t\t\t  controllerType: \"slider\",\n\t\t\t\t  controllerName: \"Unsharp Mask Radius (Dark)\"\n\t\t\t\t})\n\t\t\t\t// 2\n\t\t\t\taddController(NULL_LAYER, LIGHT, {\n\t\t\t\t\teffectType: \"Unsharp Mask\",\n\t\t\t\t\teffectName: \"Amount\"\n\t\t\t\t}, {\n\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\tcontrollerName: \"Unsharp Mask (High Light)\"\n\t\t\t\t});\n\t\t\t\taddController(NULL_LAYER, LIGHT, {\n\t\t\t\t\teffectType: \"Unsharp Mask\",\n\t\t\t\t\teffectName: \"Radius\"\n\t\t\t\t}, {\n\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\tcontrollerName: \"Unsharp Mask Radius (High Light)\"\n\t\t\t\t});\n\t\t\t\t// 3\n\t\t\t\taddController(NULL_LAYER, LIGHT, {\n\t\t\t\t\teffectType: \"Unsharp Mask 2\",\n\t\t\t\t\teffectName: \"Amount\"\n\t\t\t\t}, {\n\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\tcontrollerName: \"Unsharp Mask (Low Light)\"\n\t\t\t\t});\n\t\t\t\taddController(NULL_LAYER, LIGHT, {\n\t\t\t\t\teffectType: \"Unsharp Mask 2\",\n\t\t\t\t\teffectName: \"Radius\"\n\t\t\t\t}, {\n\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\tcontrollerName: \"Unsharp Mask Radius (Low Light)\"\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (BRIGHTNESS_CONTROL) {\n\t\t\t\tvar BRIGHTNESS_LAYER = addBrightnessControl(newComp, selections[numComp], \"BRIGHTNESS\");\n\t\t\t\tBRIGHTNESS_LAYER.blendingMode = LIGHTEN;\n\t\t\t\tBRIGHTNESS_LAYER.Effects.property(brightness).property(\"Brightness\").setValue(BRIGHTNESS_VALUE ? BRIGHTNESS_VALUE : 0);\n\t\t\t\tBRIGHTNESS_LAYER.Effects.property(brightness).property(\"Contrast\").setValue(CONTRAST_VALUE ? CONTRAST_VALUE : 0);\n\n\t\t\t\tif (NULL_LAYER) {\n\t\t\t\t\t// 1\n\t\t\t\t\taddController(NULL_LAYER, BRIGHTNESS_LAYER, {\n\t\t\t\t\t\teffectType: \"Brightness & Contrast\",\n\t\t\t\t\t\teffectName: \"Brightness\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\t\tcontrollerName: \"Brightness\"\n\t\t\t\t\t})\n\t\t\t\t\t// 2\n\t\t\t\t\taddController(NULL_LAYER, BRIGHTNESS_LAYER, {\n\t\t\t\t\t\teffectType: \"Brightness & Contrast\",\n\t\t\t\t\t\teffectName: \"Contrast\"\n\t\t\t\t\t}, {\n\t\t\t\t\t\tcontrollerType: \"slider\",\n\t\t\t\t\t\tcontrollerName: \"Contrast\"\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\talert(e);\n\t\t}\n\t\t\n  \tif (NULL_LAYER) {\n  \t\tNULL_LAYER.moveToBeginning()\n  \t}\n\t}\n}\n\nfunction addBrightnessControl(comp, selectionComp, layerName) {\n\tvar BRIGHTNESS_ADJUSTMENT = addAdjustmentLayer(comp, selectionComp, layerName);\n\tBRIGHTNESS_ADJUSTMENT.Effects.addProperty(brightness);\n\treturn BRIGHTNESS_ADJUSTMENT;\n}\n\nfunction addAdjustmentLayer(comp, selectionComp, layerName) {\n\tvar ADJUSTMENTLAYER = comp.layers.addSolid([1, 1, 1], layerName, selectionComp.width, selectionComp.height, selectionComp.pixelAspect, selectionComp.duration);\n\t// Enable Adjustment layer\n\tADJUSTMENTLAYER.adjustmentLayer = true;\n\treturn ADJUSTMENTLAYER;\n}\n\nfunction addNullLayer(comp, layerName) {\n\tvar NULL_LAYER = comp.layers.addNull();\n\tNULL_LAYER.name = layerName\n\treturn NULL_LAYER;\n}","name":"RAW Beautify","documentation":"My custom beautify from RAW Canon video intake.","last_update":1592367901188},{"_id":"Remove-Extension-Name-1591343769822","code":"function removeExtensionName(theString) {\n\treturn theString.replace(/\\.[^\\/\\.]+$/, \"\");\n}","name":"Remove Extension Name","documentation":"removeExtensionName(**string**)\n__Returns:__\n**string**","tags":["Remove","Extension","File Type"],"include_id":"stringReplace","is_include":true,"last_update":1591344603474},{"_id":"Text-Background-1588114280542","code":"app.beginUndoGroup(\"Add Background Text\");\n\nfunction truncateString(str, num) {\n  if (str.length <= num) {\n    return str\n  }\n  return str.slice(0, num) + ' ...'\n}\n\nvar curComp = app.project.activeItem;\n\n// Text Layer\nvar addTextBool = _ bool: Create Text? _;\nvar curText = _ layer: Text Layer _;\n\nif(curComp && addTextBool) {\n  curText = curComp.layers.addText(_ string: Your Text _);\n}\n\n// Padding\nvar paddingTopBottom = _ number: Padding Top & Bottom _;\nvar paddingLeftRight = _ number: Padding Left & Right _;\n\n// Color\nvar fillColor = _ color: Fill Color _;\nvar strokeColor = _ color: Stroke Color _;\n\nvar sliderControl = \"ADBE Slider Control\";\n\nvar groupName = \"Rectangle Box\";\nvar effectsName = \"Effects\";\nvar rectanglePathName = \"Rectangle Path 1\";\n\nif (curComp && curText) {\n\tvar shapeLayer = curComp.layers.addShape();\n\tshapeLayer.name = \"Text Box\";\n\tvar shapeGroup = shapeLayer.property(\"Contents\").addProperty(\"ADBE Vector Group\");\n\tshapeGroup.name = groupName;\n  shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Shape - Rect\");\n\n\tvar fill = shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Graphic - Fill\");\n\tfill.Color.setValue(fillColor);\n\tvar stroke = shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Graphic - Stroke\");\n\tstroke.Color.setValue(strokeColor);\n\t\n\t// Slider Control\n\tvar controllerTotalPad = shapeLayer.Effects.addProperty(sliderControl);\n  controllerTotalPad.name = \"Total Padding\";\n  shapeLayer.property(effectsName).property(controllerTotalPad.name)(1).expression = \"effect(\\\"Padding Top & Bottom\\\")(1) + effect(\\\"Padding Left & Right\\\")(1)\";\n  \n  var controllerPadTopBottom = shapeLayer.Effects.addProperty(sliderControl);\n  controllerPadTopBottom.name = \"Padding Top & Bottom\";\n  controllerPadTopBottom.Slider.setValue(paddingTopBottom);\n  \n  var controllerPadLeftRight = shapeLayer.Effects.addProperty(sliderControl);\n  controllerPadLeftRight.name = \"Padding Left & Right\";\n  controllerPadLeftRight.Slider.setValue(paddingLeftRight);\n  \n  var totalPaddingHeight = \"effect(\\\"Padding Top & Bottom\\\")(1)\";\n  var totalPaddingWidth = \"effect(\\\"Padding Left & Right\\\")(1)\";\n\t\n\t\n\t// Expression Sizes & Position\n\tvar expressionSize = \"x = thisComp.layer(\\\"\" + curText.name + \"\\\").sourceRectAtTime().width\" + \n\t\";y = thisComp.layer(\\\"\" + curText.name + \"\\\").sourceRectAtTime().height;\" + \n\t\"[x + \" + totalPaddingWidth + \", y + \" + totalPaddingHeight + \"];\";\n\t\n\tvar expressionPos = \"s=thisComp.layer(\\\"\" + curText.name + \"\\\");\" +\n                      \"w=s.sourceRectAtTime().width/2;\" +\n                      \"h=s.sourceRectAtTime().height/2;\" + \n                      \"l=s.sourceRectAtTime().left;\" +\n                      \"t=s.sourceRectAtTime().top;\" +\n                      \"[w+l,h+t];\";\n\t\n\t// Set expression to shapeLayer\n\tshapeLayer.content(groupName).content(rectanglePathName).size.expression = expressionSize;\n\tshapeLayer.content(groupName).content(rectanglePathName).position.expression = expressionPos;\n\t\n\t\n\t// If Using existing text layer\n\tif(!addTextBool){\n\t  var posText = curComp.layer(curText.name).property(\"Position\").value;\n\t  shapeLayer.property(\"Position\").setValue([posText[0], posText[1]]);\n\t}\n\t\n\t// Name Shape layer based on text\n\tshapeLayer.name += \" - \" + truncateString(curText.name, 10);\n\t\t\n\t// Set parent shape layer to text layer\n\tcurComp.layer(shapeLayer.name).parent = curText;\n\t\n\t// Set Position of Text to be center of comp\n\tcurText.property(\"position\").setValue([curComp.width/2, curComp.height/2]);\n\t\n\t// Move to last index\n\tshapeLayer.moveToEnd();\n}\n\n// Deselect All Layers\napp.executeCommand(2004);\n\napp.endUndoGroup();","name":"Text Background","documentation":"Text Background that always expand with the sourceText.\n\nIf you have your existing text layer, **uncheck \"Create Text\"** to use your own text layer. And **make sure your text layer is selected**.","tags":["Text","Background","Layer","Button"],"last_update":1588139172725}]},{"_id":"Useful-Expression-1588219431839","name":"Useful Expression","type":"expression","expressions":[{"_id":"Automatic-Fade-1588224794770","code":"var transition = _ slider: Transition Value _;       \r\nif (marker.numKeys<2){\r\n  tSecs = transition / ( 1 / thisComp.frameDuration); \r\n  linear(time, inPoint, inPoint + tSecs, 0, 100) - linear(time, outPoint - tSecs, outPoint, 0, 100)\r\n}else{\r\n  linear(time, inPoint, marker.key(1).time, 0, 100) - linear(time, marker.key(2).time, outPoint, 0, 100)\r\n}","name":"Automatic Fade","documentation":"The automatic fade expression is useful when you don’t want to bother a create keyframes for a fade animation. TARGET: **Opacity**","property_types":["1d"],"tags":["Fade","Transition","Automatic"],"last_update":1588226154709},{"_id":"Blink-1588227811718","code":"blinkSpeed = _ angle: Blink Speed _;\r\nn = Math.sin(time * blinkSpeed);\r\nif (n < 0) 0\r\nelse 100;","name":"Blink","documentation":"The blinking expression become super handy when you don’t want to repeat a bunch of opacity keyframes over and over or want to animate a cursor quickly.\nSimply add this expression below to your opacity properties.\nTARGET: **Opacity**","property_types":["other"],"tags":["Opacity","Blink"],"last_update":1588228205977},{"_id":"Bounce-Expression-1588219438498","code":"amp = _ slider: Amplitude _;\r\nfreq = _ slider: Frequency _;\r\ndecay = _ slider: Decay _;\r\nn = 0;\r\nif (numKeys > 0){\r\n  n = nearestKey(time).index;\r\nif (key(n).time > time){\r\n  n--;\r\n}}\r\nif (n == 0){\r\n  t = 0;\r\n}else{\r\n  t = time - key(n).time;\r\n}\r\nif (n > 0 && t < 1){\r\n  v = velocityAtTime(key(n).time - thisComp.frameDuration/10);\r\n  value + v*amp*Math.sin(freq*t*2*Math.PI)/Math.exp(decay*t);\r\n}else{\r\n  value\r\n  \r\n}","name":"Bounce Expression","documentation":"The bounce expression is very useful to make your animations and titles look dynamic with a nice elastic movement, just **make 2 keyframes position** and past the code below. TARGET: **Position**","property_types":["1d","2d"],"tags":["Bounce","Position"],"snippet_prefix":"","is_snippet":false,"last_update":1588226173559},{"_id":"Constant-Rotation-per-Second-1588226578681","code":"veloc = _ angle: Degree Rotation _; //360 Degree Rotation per Second\r\nr = rotation + (time - inPoint) *veloc;\r\n[r]","name":"Constant Rotation per Second","documentation":"Here is another After Effects rotation expression, no key frames needed to make a simple 360 rotation on a layer. TARGET: **Rotation**","property_types":["other"],"tags":["Rotation","Loop"],"last_update":1588226780120},{"_id":"Looping-Wiggle-1588226203602","code":"freq = _ slider: Frequency (Try 1.0) _;\r\namp = _ slider: Amplitude _;\r\nloopTime = _ slider: Num of Loop _;\r\nt = time % loopTime;\r\nwiggle1 = wiggle(freq, amp, 1, 0.5, t);\r\nwiggle2 = wiggle(freq, amp, 1, 0.5, t - loopTime);\r\nlinear(t, 0, loopTime, wiggle1, wiggle2)","name":"Looping Wiggle","documentation":"The looping [Wiggle Expression](https://blog.motionisland.com/wiggle-expression-after-effects-tutorial/) become handy when you want an object to move randomly in your composition. Looping wiggle should be seamless and you shouldn’t see a cut, this expression is also used for background animation. TARGET: **Position**","property_types":["1d","other"],"tags":["Loop","Wiggle"],"last_update":1588226498353},{"_id":"Squash---Stretch-1588225343333","code":"maxDev = _ slider: Max Deviation in Pixels _; // max deviation in pixels\r\nspd = _ slider: Speed of Oscillation _; //speed of oscillation\r\ndecay = _ slider: How Fast it Slows Down (Try 1.0) _; //how fast it slows down\r\n\r\nt = time - inPoint;\r\nx = scale[0] + maxDev*Math.sin(spd*t)/Math.exp(decay*t);\r\ny = scale[0]*scale[1]/x;\r\n[x,y]","name":"Squash & Stretch","documentation":"This bouncing squash and stretch expression should make your animation a bit more alive by adding a proportional scale to your shapes or images. TARGET: **Scale**","property_types":["2d","2d_spatial"],"tags":["Squash","Stretch"],"last_update":1588225711828}]}]