[{"_id":"Useful-Expression-1588219431839","name":"Useful Expression","type":"expression","creation_date":1588219431839,"expressions":[{"_id":"Automatic-Fade-1588224794770","code":"var transition = _ slider: Transition Value _;       \r\nif (marker.numKeys<2){\r\n  tSecs = transition / ( 1 / thisComp.frameDuration); \r\n  linear(time, inPoint, inPoint + tSecs, 0, 100) - linear(time, outPoint - tSecs, outPoint, 0, 100)\r\n}else{\r\n  linear(time, inPoint, marker.key(1).time, 0, 100) - linear(time, marker.key(2).time, outPoint, 0, 100)\r\n}","name":"Automatic Fade","documentation":"The automatic fade expression is useful when you don’t want to bother a create keyframes for a fade animation. TARGET: **Opacity**","property_types":["1d"],"tags":["Fade","Transition","Automatic"],"last_update":1588226154709},{"_id":"Blink-1588227811718","code":"blinkSpeed = _ angle: Blink Speed _;\r\nn = Math.sin(time * blinkSpeed);\r\nif (n < 0) 0\r\nelse 100;","name":"Blink","documentation":"The blinking expression become super handy when you don’t want to repeat a bunch of opacity keyframes over and over or want to animate a cursor quickly.\nSimply add this expression below to your opacity properties.\nTARGET: **Opacity**","property_types":["other"],"tags":["Opacity","Blink"],"last_update":1588228205977},{"_id":"Bounce-Expression-1588219438498","code":"amp = _ slider: Amplitude _;\r\nfreq = _ slider: Frequency _;\r\ndecay = _ slider: Decay _;\r\nn = 0;\r\nif (numKeys > 0){\r\n  n = nearestKey(time).index;\r\nif (key(n).time > time){\r\n  n--;\r\n}}\r\nif (n == 0){\r\n  t = 0;\r\n}else{\r\n  t = time - key(n).time;\r\n}\r\nif (n > 0 && t < 1){\r\n  v = velocityAtTime(key(n).time - thisComp.frameDuration/10);\r\n  value + v*amp*Math.sin(freq*t*2*Math.PI)/Math.exp(decay*t);\r\n}else{\r\n  value\r\n  \r\n}","name":"Bounce Expression","documentation":"The bounce expression is very useful to make your animations and titles look dynamic with a nice elastic movement, just **make 2 keyframes position** and past the code below. TARGET: **Position**","property_types":["1d","2d"],"tags":["Bounce","Position"],"snippet_prefix":"","is_snippet":false,"last_update":1588226173559},{"_id":"Constant-Rotation-per-Second-1588226578681","code":"veloc = _ angle: Degree Rotation _; //360 Degree Rotation per Second\r\nr = rotation + (time - inPoint) *veloc;\r\n[r]","name":"Constant Rotation per Second","documentation":"Here is another After Effects rotation expression, no key frames needed to make a simple 360 rotation on a layer. TARGET: **Rotation**","property_types":["other"],"tags":["Rotation","Loop"],"last_update":1588226780120},{"_id":"Looping-Wiggle-1588226203602","code":"freq = _ slider: Frequency (Try 1.0) _;\r\namp = _ slider: Amplitude _;\r\nloopTime = _ slider: Num of Loop _;\r\nt = time % loopTime;\r\nwiggle1 = wiggle(freq, amp, 1, 0.5, t);\r\nwiggle2 = wiggle(freq, amp, 1, 0.5, t - loopTime);\r\nlinear(t, 0, loopTime, wiggle1, wiggle2)","name":"Looping Wiggle","documentation":"The looping [Wiggle Expression](https://blog.motionisland.com/wiggle-expression-after-effects-tutorial/) become handy when you want an object to move randomly in your composition. Looping wiggle should be seamless and you shouldn’t see a cut, this expression is also used for background animation. TARGET: **Position**","property_types":["1d","other"],"tags":["Loop","Wiggle"],"last_update":1588226498353},{"_id":"Squash---Stretch-1588225343333","code":"maxDev = _ slider: Max Deviation in Pixels _; // max deviation in pixels\r\nspd = _ slider: Speed of Oscillation _; //speed of oscillation\r\ndecay = _ slider: How Fast it Slows Down (Try 1.0) _; //how fast it slows down\r\n\r\nt = time - inPoint;\r\nx = scale[0] + maxDev*Math.sin(spd*t)/Math.exp(decay*t);\r\ny = scale[0]*scale[1]/x;\r\n[x,y]","name":"Squash & Stretch","documentation":"This bouncing squash and stretch expression should make your animation a bit more alive by adding a proportional scale to your shapes or images. TARGET: **Scale**","property_types":["2d","2d_spatial"],"tags":["Squash","Stretch"],"last_update":1588225711828}]},{"_id":"Default-1588045113736","name":"My Code","type":"script","creation_date":1588045113738,"expressions":[{"_id":"Motion-Trail-1588228261142","code":"app.beginUndoGroup(\"Undo Motion Trail\");\n\nvar targetLayer = _ layer: Target Layer _;\nvar renameLayer = _ string: Rename Layer _;\nvar labelColor = _ number: Label Color(Option: 1 - 16) _;\nvar numOfFramesDelay = _ number: Number of Frames Delay _;\nvar opacityFactor = _ number: Opacity Factor(Try 0.75) _;\nvar numOfRepeatLayer = _ number: Number of Repeat Layer(Optional) _;\n\nclearOutput();\n\nif (targetLayer) {\n\tvar layer = app.project.activeItem.layer(targetLayer.name);\n\tvar nullLayer = app.project.activeItem.layers.addNull();\n\tnullLayer.name = renameLayer.length > 0 ? renameLayer + \" Controller\" : layer.name + \" Controller\";\n\tlayer.label = labelColor;\n\tnullLayer.label = labelColor;\n\n\tif (renameLayer.length > 0) {\n\t\tlayer.name = renameLayer;\n\t}\n\n\t// Add slider control\n\tvar sliderFrame = nullLayer.Effects.addProperty(\"ADBE Slider Control\");\n\tsliderFrame.name = \"Number of Frames Delay\";\n\tsliderFrame.property(\"Slider\").setValue(numOfFramesDelay);\n\t//Apply to position\n\tvar posExpression = \"var delay = thisComp.layer(\\\"\" + nullLayer.name + \"\\\").effect(\\\"\" + sliderFrame.name + \"\\\")(1); //number of frames to delay \\nvar d = delay*thisComp.frameDuration*(index - 1); \\nthisComp.layer(1).position.valueAtTime(time - d);\";\n\n\tvar sliderOpac = nullLayer.Effects.addProperty(\"ADBE Slider Control\");\n\tsliderOpac.name = \"Opacity Factor\";\n\tsliderOpac.property(\"Slider\").setValue(opacityFactor);\n\t//Apply to Opacity\n\tvar opacExpression = \"var opacityFactor = thisComp.layer(\\\"\" + nullLayer.name + \"\\\").effect(\\\"\" + sliderOpac.name + \"\\\")(1); \\nMath.pow(opacityFactor,index - 1)*100;\";\n\n\ttry {\n\t\t// Add expression\n\t\tlayer.property(\"Transform\").property(\"Position\").expression = posExpression;\n\t\tlayer.property(\"Transform\").property(\"Opacity\").expression = opacExpression;\n\t} catch (e) {\n\t\talert(e);\n\t}\n\n\t// Parent all layer to null layer so that it can animate position property and all\n\t// \tapp.project.activeItem.layer(layer.name).parent = nullLayer;\n\n\tif (numOfRepeatLayer > 0) {\n\t\tfor (var i = 0; i < numOfRepeatLayer; i++) {\n\t\t\tvar duplicateLayer = layer.duplicate();\n\t\t}\n\t}\n}\n\nwriteLn(\"Script successful added to layer name:\\n'\" + layer.name + \"'.\")\napp.endUndoGroup();","name":"Motion Trail","documentation":"You can apply this to any layer! It will do motion trail for you when you had set keyframe on Position property.","tags":["Motion Trail","Trail"],"last_update":1588236954539},{"_id":"Text-Background-1588114280542","code":"app.beginUndoGroup(\"Add Background Text\");\n\nfunction truncateString(str, num) {\n  if (str.length <= num) {\n    return str\n  }\n  return str.slice(0, num) + ' ...'\n}\n\nvar curComp = app.project.activeItem;\n\n// Text Layer\nvar addTextBool = _ bool: Create Text? _;\nvar curText = _ layer: Text Layer _;\n\nif(curComp && addTextBool) {\n  curText = curComp.layers.addText(_ string: Your Text _);\n}\n\n// Padding\nvar paddingTopBottom = _ number: Padding Top & Bottom _;\nvar paddingLeftRight = _ number: Padding Left & Right _;\n\n// Color\nvar fillColor = _ color: Fill Color _;\nvar strokeColor = _ color: Stroke Color _;\n\nvar sliderControl = \"ADBE Slider Control\";\n\nvar groupName = \"Rectangle Box\";\nvar effectsName = \"Effects\";\nvar rectanglePathName = \"Rectangle Path 1\";\n\nif (curComp && curText) {\n\tvar shapeLayer = curComp.layers.addShape();\n\tshapeLayer.name = \"Text Box\";\n\tvar shapeGroup = shapeLayer.property(\"Contents\").addProperty(\"ADBE Vector Group\");\n\tshapeGroup.name = groupName;\n  shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Shape - Rect\");\n\n\tvar fill = shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Graphic - Fill\");\n\tfill.Color.setValue(fillColor);\n\tvar stroke = shapeGroup.property(\"Contents\").addProperty(\"ADBE Vector Graphic - Stroke\");\n\tstroke.Color.setValue(strokeColor);\n\t\n\t// Slider Control\n\tvar controllerTotalPad = shapeLayer.Effects.addProperty(sliderControl);\n  controllerTotalPad.name = \"Total Padding\";\n  shapeLayer.property(effectsName).property(controllerTotalPad.name)(1).expression = \"effect(\\\"Padding Top & Bottom\\\")(1) + effect(\\\"Padding Left & Right\\\")(1)\";\n  \n  var controllerPadTopBottom = shapeLayer.Effects.addProperty(sliderControl);\n  controllerPadTopBottom.name = \"Padding Top & Bottom\";\n  controllerPadTopBottom.Slider.setValue(paddingTopBottom);\n  \n  var controllerPadLeftRight = shapeLayer.Effects.addProperty(sliderControl);\n  controllerPadLeftRight.name = \"Padding Left & Right\";\n  controllerPadLeftRight.Slider.setValue(paddingLeftRight);\n  \n  var totalPaddingHeight = \"effect(\\\"Padding Top & Bottom\\\")(1)\";\n  var totalPaddingWidth = \"effect(\\\"Padding Left & Right\\\")(1)\";\n\t\n\t\n\t// Expression Sizes & Position\n\tvar expressionSize = \"x = thisComp.layer(\\\"\" + curText.name + \"\\\").sourceRectAtTime().width\" + \n\t\";y = thisComp.layer(\\\"\" + curText.name + \"\\\").sourceRectAtTime().height;\" + \n\t\"[x + \" + totalPaddingWidth + \", y + \" + totalPaddingHeight + \"];\";\n\t\n\tvar expressionPos = \"s=thisComp.layer(\\\"\" + curText.name + \"\\\");\" +\n                      \"w=s.sourceRectAtTime().width/2;\" +\n                      \"h=s.sourceRectAtTime().height/2;\" + \n                      \"l=s.sourceRectAtTime().left;\" +\n                      \"t=s.sourceRectAtTime().top;\" +\n                      \"[w+l,h+t];\";\n\t\n\t// Set expression to shapeLayer\n\tshapeLayer.content(groupName).content(rectanglePathName).size.expression = expressionSize;\n\tshapeLayer.content(groupName).content(rectanglePathName).position.expression = expressionPos;\n\t\n\t\n\t// If Using existing text layer\n\tif(!addTextBool){\n\t  var posText = curComp.layer(curText.name).property(\"Position\").value;\n\t  shapeLayer.property(\"Position\").setValue([posText[0], posText[1]]);\n\t}\n\t\n\t// Name Shape layer based on text\n\tshapeLayer.name += \" - \" + truncateString(curText.name, 10);\n\t\t\n\t// Set parent shape layer to text layer\n\tcurComp.layer(shapeLayer.name).parent = curText;\n\t\n\t// Set Position of Text to be center of comp\n\tcurText.property(\"position\").setValue([curComp.width/2, curComp.height/2]);\n\t\n\t// Move to last index\n\tshapeLayer.moveToEnd();\n}\n\n// Deselect All Layers\napp.executeCommand(2004);\n\napp.endUndoGroup();","name":"Text Background","documentation":"Text Background that always expand with the sourceText.\n\nIf you have your existing text layer, **uncheck \"Create Text\"** to use your own text layer. And **make sure your text layer is selected**.","tags":["Text","Background","Layer","Button"],"last_update":1588139172725}]}]